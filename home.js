init();

var isSearching = false;
var searchRequest = null;
var chosenWebsite;
var chosenTool;
var appList = [];
var appVersions = [];

function init() {
    addWebsiteEventListener();
    addToolEventListener();
    addBeginSearchEventListener();
    addCancelSearchEventListener();
    addAppListEventListener();
}

function addToolEventListener() {
    var toolDropdown = $("#toolDropdown")
    var tools = toolDropdown.find("li");
    
    tools.on("click", function(){
        var selectedTool = $(this).text();
        $("#toolText").text(selectedTool);
    });    
}

function addWebsiteEventListener() {
    var websiteDropdown = $("#websiteDropdown");
    var websites = websiteDropdown.find("li");
    
    websites.on("click", function(){
        var selectedWebsite = $(this).text();
        $("#websiteText").text(selectedWebsite);
    });
}

function addBeginSearchEventListener() {
    var beginSearchButton = $("#beginSearchButton");

    beginSearchButton.on("click", function() {
        //check if there is already ongoing search
        $(".loader").removeClass("invisible");
        //preform python search
        chosenWebsite = $("#websiteText").text().replace("www.", "").replace(".com", "");
        chosenTool = $("#toolText").text().replace(" ", "_");
        isSearching = true;
        runPyScript(chosenWebsite, chosenTool);
    });
}

function addCancelSearchEventListener() {
    var cancelSearchButton = $("#cancelSearchButton");

    cancelSearchButton.on("click", function() {
        if(isSearching) {
            $(".loader").addClass("invisible");
            searchRequest.abort();
            runKillScript();
            isSearching = false;
        }
    });
}

function addAppListEventListener() {
    var appList = $("#appList");

    appList.on("click", ".list-group-item" , function() {
        if($("#appList .active").exists()) {
            var selectedApp = $("#appList .active");
            selectedApp.removeClass("active");
        }
        $(this).addClass("active");
        setAppInfo($(this).text());
    });
}

function runPyScript(chosenWebsite, chosenTool) {
    searchRequest = $.ajax( {
        url: "http://localhost:8000/cgi-bin/" + chosenWebsite + ".py",
        type: "GET",
        async : true,
        data: { toolFile: chosenTool + ".txt" },
        success : function() {
            $(".loader").addClass("invisible");
            processJsonFile();
        }
    });
}

/*
function runKillScript() {
    $.ajax( {
        url: "http://localhost:8001/cgi-bin/kill_python_script.py",
        type: "GET",
        async : true,
        data: { pythonFile : chosenWebsite },
        success : function() {
            alert("completed kill");
        }
    });
}
*/

function processJsonFile() {
    alert("webscraping complete");
    var jsonPath = "/cached/" + chosenTool + "_" + chosenWebsite + ".json";
    $.getJSON(jsonPath, function(data) {
        $.each(data, function(key, val) {
            appList[val.name] = {
                name : val.name,
                link : val.link,
                author : val.author,
                description : val.description,
                versions : $.each(val.appVersions, function(key,val) {
                    appVersions.push( {
                        key : val
                    })
                })
            }
        })
    })
    .done(addAppsToAppList);
}

function addAppsToAppList() {
    var appListView = $("#appList");
    appListViewHTML = "";
    var appListKeys = Object.keys(appList);
    appListKeys.forEach(function(key) {
        var app = appList[key]
        appListViewHTML += '<li class="list-group-item">' + app.name + '</li>'
    });
    appListView.html(appListViewHTML);
}

function setAppInfo(appName) {
    alert(appName)
    var app = appList[appName];
    $("#appName").text(app.name);
    $("#appAuthor").text(app.author);
    $("#appDescription").text(app.description);
    var appVersionList = $("#versionList");
    appVersionsHTML = "";
    var appVersions = app.versions;
    var appVersionKeys = Object.keys(appVersions);
    appVersionKeys.forEach(function(versionName) {
        var versionLink = appVersions[versionName];
        appVersionsHTML += '<a class="list-group-item" href=' + versionLink + '>' + versionName + '</a>';
    });
    appVersionList.html(appVersionsHTML);
}

jQuery.fn.exists = function() {
    return this.length > 0;
}